{
 "Resources": {
  "DependenciesLayerDF300E31": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "CompatibleRuntimes": [
     "python3.9"
    ],
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-east-1"
     },
     "S3Key": "cd2380c1aad8b232578087904059db8485dda7e1a912f7fb7955d6176119164f.zip"
    },
    "Description": "Layer containing Python dependencies"
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/DependenciesLayer/Resource",
    "aws:asset:path": "asset.cd2380c1aad8b232578087904059db8485dda7e1a912f7fb7955d6176119164f.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "SongsLambdaServiceRole228DD055": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/SongsLambda/ServiceRole/Resource"
   }
  },
  "SongsLambdaServiceRoleDefaultPolicy1C9E4DB3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "DatabaseStack:ExportsOutputFnGetAttSongsTable64F8B317ArnEAB5B67E"
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::ourchants-songs"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::ourchants-songs/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SongsLambdaServiceRoleDefaultPolicy1C9E4DB3",
    "Roles": [
     {
      "Ref": "SongsLambdaServiceRole228DD055"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/SongsLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "SongsLambda1C3C9254": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-east-1"
     },
     "S3Key": "52fcfa765a8defdae41a3a896c5d4c0a2feab19b93f360711bb87c1407da87e1.zip"
    },
    "Environment": {
     "Variables": {
      "DYNAMODB_TABLE_NAME": {
       "Fn::ImportValue": "DatabaseStack:ExportsOutputRefSongsTable64F8B31794ADE60C"
      },
      "S3_BUCKET": "ourchants-songs"
     }
    },
    "Handler": "app.lambda_handler",
    "Layers": [
     {
      "Ref": "DependenciesLayerDF300E31"
     }
    ],
    "Role": {
     "Fn::GetAtt": [
      "SongsLambdaServiceRole228DD055",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 30
   },
   "DependsOn": [
    "SongsLambdaServiceRoleDefaultPolicy1C9E4DB3",
    "SongsLambdaServiceRole228DD055"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiStack/SongsLambda/Resource",
    "aws:asset:path": "asset.52fcfa765a8defdae41a3a896c5d4c0a2feab19b93f360711bb87c1407da87e1",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "SongsHttpApiB8BB25F9": {
   "Type": "AWS::ApiGatewayV2::Api",
   "Properties": {
    "CorsConfiguration": {
     "AllowHeaders": [
      "Content-Type",
      "Accept"
     ],
     "AllowMethods": [
      "GET",
      "POST",
      "PUT",
      "DELETE",
      "OPTIONS"
     ],
     "AllowOrigins": [
      "https://ourchants.com",
      "http://ourchants-website.s3-website-us-east-1.amazonaws.com"
     ],
     "MaxAge": 3000
    },
    "Description": "HTTP API for managing songs",
    "Name": "SongsHttpApi",
    "ProtocolType": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/SongsHttpApi/Resource"
   }
  },
  "SongsHttpApiDefaultStage9937F8FF": {
   "Type": "AWS::ApiGatewayV2::Stage",
   "Properties": {
    "ApiId": {
     "Ref": "SongsHttpApiB8BB25F9"
    },
    "AutoDeploy": true,
    "StageName": "$default"
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/SongsHttpApi/DefaultStage/Resource"
   }
  },
  "SongsHttpApiGETsongsLambdaIntegrationC1F7DB57": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "SongsHttpApiB8BB25F9"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "SongsLambda1C3C9254",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/SongsHttpApi/GET--songs/LambdaIntegration/Resource"
   }
  },
  "SongsHttpApiGETsongsLambdaIntegrationPermission887E8E8F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SongsLambda1C3C9254",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "SongsHttpApiB8BB25F9"
       },
       "/*/*/songs"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/SongsHttpApi/GET--songs/LambdaIntegration-Permission"
   }
  },
  "SongsHttpApiGETsongs5D9286A8": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "SongsHttpApiB8BB25F9"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "GET /songs",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "SongsHttpApiGETsongsLambdaIntegrationC1F7DB57"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/SongsHttpApi/GET--songs/Resource"
   }
  },
  "SongsHttpApiPOSTsongsLambdaIntegrationPermission16254060": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SongsLambda1C3C9254",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "SongsHttpApiB8BB25F9"
       },
       "/*/*/songs"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/SongsHttpApi/POST--songs/LambdaIntegration-Permission"
   }
  },
  "SongsHttpApiPOSTsongs4A44F99C": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "SongsHttpApiB8BB25F9"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "POST /songs",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "SongsHttpApiGETsongsLambdaIntegrationC1F7DB57"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/SongsHttpApi/POST--songs/Resource"
   }
  },
  "SongsHttpApiGETsongssongidLambdaIntegrationPermissionD192CEF9": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SongsLambda1C3C9254",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "SongsHttpApiB8BB25F9"
       },
       "/*/*/songs/{song_id}"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/SongsHttpApi/GET--songs--{song_id}/LambdaIntegration-Permission"
   }
  },
  "SongsHttpApiGETsongssongid2A5FF3FA": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "SongsHttpApiB8BB25F9"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "GET /songs/{song_id}",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "SongsHttpApiGETsongsLambdaIntegrationC1F7DB57"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/SongsHttpApi/GET--songs--{song_id}/Resource"
   }
  },
  "SongsHttpApiPUTsongssongidLambdaIntegrationPermissionB9F2E856": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SongsLambda1C3C9254",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "SongsHttpApiB8BB25F9"
       },
       "/*/*/songs/{song_id}"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/SongsHttpApi/PUT--songs--{song_id}/LambdaIntegration-Permission"
   }
  },
  "SongsHttpApiPUTsongssongid8472DC9C": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "SongsHttpApiB8BB25F9"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "PUT /songs/{song_id}",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "SongsHttpApiGETsongsLambdaIntegrationC1F7DB57"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/SongsHttpApi/PUT--songs--{song_id}/Resource"
   }
  },
  "SongsHttpApiDELETEsongssongidLambdaIntegrationPermissionC0FD6592": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SongsLambda1C3C9254",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "SongsHttpApiB8BB25F9"
       },
       "/*/*/songs/{song_id}"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/SongsHttpApi/DELETE--songs--{song_id}/LambdaIntegration-Permission"
   }
  },
  "SongsHttpApiDELETEsongssongid291064FC": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "SongsHttpApiB8BB25F9"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "DELETE /songs/{song_id}",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "SongsHttpApiGETsongsLambdaIntegrationC1F7DB57"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/SongsHttpApi/DELETE--songs--{song_id}/Resource"
   }
  },
  "SongsHttpApiPOSTpresignedurlLambdaIntegrationPermissionD68AE8FC": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SongsLambda1C3C9254",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "SongsHttpApiB8BB25F9"
       },
       "/*/*/presigned-url"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/SongsHttpApi/POST--presigned-url/LambdaIntegration-Permission"
   }
  },
  "SongsHttpApiPOSTpresignedurl1EAD3311": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "SongsHttpApiB8BB25F9"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "POST /presigned-url",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "SongsHttpApiGETsongsLambdaIntegrationC1F7DB57"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/SongsHttpApi/POST--presigned-url/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/11O0UrDQBD8lr5f1rZ58rEVREEwpOBr2V7XuE1yF273DCHk3+UuCurTzOzODLOH3f0WthscpbDXtuj4AvNJ0bYGRznPHfaXK8L8ghOFNwrC3pmHd/dHP0Zn9fvxm1cUepZkWYyUZxQhFTgkMFLCMdqW9IhChrGHufYdpVjGyndsp9yS2WJw4AaVRpw+9zA/qQ6HgZMhQZInxSYXrCSdah91Zc9OqQn4M+2fzL5lMXlbirNrTE3iY7C58jXqEHUx1aQf3t2VsCuh3NyEuQjRKfcE9YpfCaLbW1IBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "ApiUrl": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "SongsHttpApiB8BB25F9"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}